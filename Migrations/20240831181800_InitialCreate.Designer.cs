// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentEmplacementApp.Data;

#nullable disable

namespace StudentEmplacementApp.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240831181800_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StudentEmplacementApp.Models.Choice", b =>
                {
                    b.Property<int>("UniId")
                        .HasColumnType("int");

                    b.Property<int>("MajorId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasComputedColumnSql("[UniId] * 100 + [MajorId]");

                    b.Property<float?>("EnterenceScore")
                        .HasColumnType("real");

                    b.Property<int>("NumOfPlaces")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("UniId", "MajorId");

                    b.HasIndex("MajorId");

                    b.HasIndex("StudentId");

                    b.ToTable("Choices");
                });

            modelBuilder.Entity("StudentEmplacementApp.Models.Major", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<int>("Language")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Majors");
                });

            modelBuilder.Entity("StudentEmplacementApp.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Score")
                        .HasColumnType("real");

                    b.Property<float>("SecondaryScore")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("StudentEmplacementApp.Models.StudentChoice", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("UniId")
                        .HasColumnType("int");

                    b.Property<int>("MajorId")
                        .HasColumnType("int");

                    b.HasKey("StudentId", "UniId", "MajorId");

                    b.HasIndex("UniId", "MajorId");

                    b.ToTable("StudentChoices");
                });

            modelBuilder.Entity("StudentEmplacementApp.Models.University", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Universities");
                });

            modelBuilder.Entity("StudentEmplacementApp.Models.Choice", b =>
                {
                    b.HasOne("StudentEmplacementApp.Models.Major", "Major")
                        .WithMany("Choices")
                        .HasForeignKey("MajorId")
                        .IsRequired();

                    b.HasOne("StudentEmplacementApp.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentEmplacementApp.Models.University", "University")
                        .WithMany("Choices")
                        .HasForeignKey("UniId")
                        .IsRequired();

                    b.Navigation("Major");

                    b.Navigation("Student");

                    b.Navigation("University");
                });

            modelBuilder.Entity("StudentEmplacementApp.Models.StudentChoice", b =>
                {
                    b.HasOne("StudentEmplacementApp.Models.Student", "Student")
                        .WithMany("StudentChoices")
                        .HasForeignKey("StudentId")
                        .IsRequired();

                    b.HasOne("StudentEmplacementApp.Models.Choice", "Choice")
                        .WithMany("StudentChoices")
                        .HasForeignKey("UniId", "MajorId")
                        .IsRequired();

                    b.Navigation("Choice");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("StudentEmplacementApp.Models.Choice", b =>
                {
                    b.Navigation("StudentChoices");
                });

            modelBuilder.Entity("StudentEmplacementApp.Models.Major", b =>
                {
                    b.Navigation("Choices");
                });

            modelBuilder.Entity("StudentEmplacementApp.Models.Student", b =>
                {
                    b.Navigation("StudentChoices");
                });

            modelBuilder.Entity("StudentEmplacementApp.Models.University", b =>
                {
                    b.Navigation("Choices");
                });
#pragma warning restore 612, 618
        }
    }
}
